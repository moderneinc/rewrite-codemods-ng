#
# Copyright 2023 the original author or authors.
# <p>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://www.apache.org/licenses/LICENSE-2.0
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
type: specs.openrewrite.org/v1beta/category
name: Next.js
packageName: org.openrewrite.codemods.modernize.nextjs
description: Recipes that modernize the use of [Next.js](https://nextjs.org/).
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.codemods.modernize.nextjs.NextJsCodemods
displayName: Next.js Codemods for API Updates
description: >
  Next.js provides Codemod transformations to help upgrade your [Next.js](https://nextjs.org/) codebase when an API is
  updated or deprecated.
tags:
  - codemods
  - nextjs
recipeList:
  - org.openrewrite.codemods.modernize.nextjs.v6.UrlToWithRouter
  - org.openrewrite.codemods.modernize.nextjs.v8.WithAmpToConfig
  - org.openrewrite.codemods.modernize.nextjs.v9.NameDefaultComponent
  - org.openrewrite.codemods.modernize.nextjs.v10.AddMissingReactImport
  - org.openrewrite.codemods.modernize.nextjs.v11.CraToNext
  - org.openrewrite.codemods.modernize.nextjs.v13_0.NextImageToLegacyImage
  - org.openrewrite.codemods.modernize.nextjs.v13_0.NextImageExperimental
  - org.openrewrite.codemods.modernize.nextjs.v13_0.NewLink
  - org.openrewrite.codemods.modernize.nextjs.v13_2.BuiltInNextFont
  - org.openrewrite.codemods.modernize.nextjs.v14_0.NextOgImport
  - org.openrewrite.codemods.modernize.nextjs.v14_0.UseViewportExport

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.codemods.modernize.nextjs.v6.UrlToWithRouter
displayName: Use `withRouter`
description: >
  Transforms the deprecated automatically injected url property on top level pages to using `withRouter` and the `router` 
  property it injects. Read more here: https://nextjs.org/docs/messages/url-deprecated

  See [documentation](https://nextjs.org/docs/app/building-your-application/upgrading/codemods#url-to-withrouter)
    for more information.
tags:
  - codemods
  - nextjs
recipeList:
  - org.openrewrite.codemods.ApplyCodemod:
      transform: 'url-to-withrouter'
      executable: '@next/codemod/bin/next-codemod.js'
      commandArgs: "--force --jscodeshift='--parser=${parser}'"

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.codemods.modernize.nextjs.v8.WithAmpToConfig
displayName: Transform AMP HOC into page config
description: >
  Transforms the `withAmp` HOC into Next.js 9 page configuration.

  See [documentation](https://nextjs.org/docs/app/building-your-application/upgrading/codemods#withamp-to-config)
    for more information.
tags:
  - codemods
  - nextjs
recipeList:
  - org.openrewrite.codemods.ApplyCodemod:
      transform: 'withamp-to-config'
      executable: '@next/codemod/bin/next-codemod.js'
      commandArgs: "--force --jscodeshift='--parser=${parser}"

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.codemods.modernize.nextjs.v9.NameDefaultComponent
displayName: Transform Anonymous Components into Named Components
description: >
  Transforms anonymous components into named components to make sure they work with
  [Fast Refresh](https://nextjs.org/blog/next-9-4#fast-refresh).

  The component will have a camel-cased name based on the name of the file, and it also works with arrow functions.

  See [documentation](https://nextjs.org/docs/app/building-your-application/upgrading/codemods#name-default-component)
    for more information.
tags:
  - codemods
  - nextjs
recipeList:
  - org.openrewrite.codemods.ApplyCodemod:
      transform: 'name-default-component'
      executable: '@next/codemod/bin/next-codemod.js'
      commandArgs: "--force --jscodeshift='--parser=${parser}"

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.codemods.modernize.nextjs.v10.AddMissingReactImport
displayName: Add React imports
description: >
  Transforms files that do not import `React` to include the import in order for the new
  [React JSX](https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html) transform to work.

  See [documentation](https://nextjs.org/docs/app/building-your-application/upgrading/codemods#add-missing-react-import)
    for more information.
tags:
  - codemods
  - nextjs
recipeList:
  - org.openrewrite.codemods.ApplyCodemod:
      transform: 'add-missing-react-import'
      executable: '@next/codemod/bin/next-codemod.js'
      commandArgs: "--force --jscodeshift='--parser=${parser}"

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.codemods.modernize.nextjs.v11.CraToNext
displayName: Rename Next Image Imports
description: >
  Safely renames `next/image` imports in existing Next.js 10, 11, or 12 applications to `next/legacy/image` in Next.js
  13. Also renames `next/future/image` to `next/image`.

  See [documentation](https://nextjs.org/docs/app/building-your-application/upgrading/codemods#cra-to-next)
    for more information.
tags:
  - codemods
  - nextjs
recipeList:
  - org.openrewrite.codemods.ApplyCodemod:
      transform: 'cra-to-next'
      executable: '@next/codemod/bin/next-codemod.js'
      commandArgs: "--force --jscodeshift='--parser=${parser}"

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.codemods.modernize.nextjs.v13_0.NextImageToLegacyImage
displayName: Rename Next Image Imports
description: >
  Safely renames `next/image` imports in existing Next.js 10, 11, or 12 applications to `next/legacy/image` in Next.js
  13. Also renames `next/future/image` to `next/image`.

  See [documentation](https://nextjs.org/docs/app/building-your-application/upgrading/codemods#next-image-to-legacy-image)
    for more information.
tags:
  - codemods
  - nextjs
recipeList:
  - org.openrewrite.codemods.ApplyCodemod:
      transform: 'next-image-to-legacy-image'
      executable: '@next/codemod/bin/next-codemod.js'
      commandArgs: "--force --jscodeshift='--parser=${parser}"

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.codemods.modernize.nextjs.v13_0.NextImageExperimental
displayName: Migrate to the New Image Component
description: >
  Dangerously migrates from `next/legacy/image` to the new `next/image` by adding inline styles and removing unused props.

  - Removes `layout` prop and adds `style`.
  - Removes `objectFit` prop and adds `style`.
  - Removes `objectPosition` prop and adds `style`.
  - Removes `lazyBoundary` prop.
  - Removes `lazyRoot` prop.

  See [documentation](https://nextjs.org/docs/app/building-your-application/upgrading/codemods#next-image-experimental)
    for more information.
tags:
  - codemods
  - nextjs
recipeList:
  - org.openrewrite.codemods.ApplyCodemod:
      transform: 'next-image-experimental'
      executable: '@next/codemod/bin/next-codemod.js'
      commandArgs: "--force --jscodeshift='--parser=${parser}"

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.codemods.modernize.nextjs.v13_0.NewLink
displayName: Remove `<a>` Tags From Link Components
description: >
  Remove `<a>` tags inside [Link Components](https://nextjs.org/docs/app/api-reference/components/link), or add a
  `legacyBehavior` prop to Links that cannot be auto-fixed.

  In cases where auto-fixing can't be applied, the `legacyBehavior` prop is added. This allows your app to keep
  functioning using the old behavior for that particular link.

  See [documentation](https://nextjs.org/docs/app/building-your-application/upgrading/codemods#new-link)
    for more information.
tags:
  - codemods
  - nextjs
recipeList:
  - org.openrewrite.codemods.ApplyCodemod:
      transform: 'new-link'
      executable: '@next/codemod/bin/next-codemod.js'
      commandArgs: "--force --jscodeshift='--parser=${parser}"

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.codemods.modernize.nextjs.v13_2.BuiltInNextFont
displayName: Use Built-in Font
description: >
  This codemod uninstalls the `@next/font` package and transforms `@next/font` imports into the built-in `next/font`.

  See [documentation](https://nextjs.org/docs/app/building-your-application/upgrading/codemods#built-in-next-font)
    for more information.
tags:
  - codemods
  - nextjs
recipeList:
  - org.openrewrite.codemods.ApplyCodemod:
      transform: 'built-in-next-font'
      executable: '@next/codemod/bin/next-codemod.js'
      commandArgs: "--force --jscodeshift='--parser=${parser}"

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.codemods.modernize.nextjs.v14_0.NextOgImport
displayName: Migrate `ImageResponse` imports
description: >
  This codemod moves transforms imports from `next/server` to `next/og for` usage of [Dynamic OG Image Generation]
  (https://nextjs.org/docs/app/building-your-application/upgrading/codemods#next-og-import).

  See [documentation](https://nextjs.org/docs/app/building-your-application/upgrading/codemods#migrate-imageresponse-imports)
  for more information.
tags:
  - codemods
  - nextjs
recipeList:
  - org.openrewrite.codemods.ApplyCodemod:
      transform: 'next-og-import'
      executable: '@next/codemod/bin/next-codemod.js'
      commandArgs: "--force --jscodeshift='--parser=${parser}"

---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.codemods.modernize.nextjs.v14_0.UseViewportExport
displayName: Use `viewport` export
description: >
  This codemod migrates certain viewport metadata to `viewport` export.

  See [documentation](https://nextjs.org/docs/app/building-your-application/upgrading/codemods#metadata-to-viewport-export)
  for more information.
tags:
  - codemods
  - nextjs
recipeList:
  - org.openrewrite.codemods.ApplyCodemod:
      transform: 'metadata-to-viewport-export'
      executable: '@next/codemod/bin/next-codemod.js'
      codemodArgs: "--force --jscodeshift='--parser=${parser}'"
